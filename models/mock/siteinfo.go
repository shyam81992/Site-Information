// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/shyam81992/Site-Information/models (interfaces: ISiteInfo)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockISiteInfo is a mock of ISiteInfo interface.
type MockISiteInfo struct {
	ctrl     *gomock.Controller
	recorder *MockISiteInfoMockRecorder
}

// MockISiteInfoMockRecorder is the mock recorder for MockISiteInfo.
type MockISiteInfoMockRecorder struct {
	mock *MockISiteInfo
}

// NewMockISiteInfo creates a new mock instance.
func NewMockISiteInfo(ctrl *gomock.Controller) *MockISiteInfo {
	mock := &MockISiteInfo{ctrl: ctrl}
	mock.recorder = &MockISiteInfoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISiteInfo) EXPECT() *MockISiteInfoMockRecorder {
	return m.recorder
}

// GetPageInfo mocks base method.
func (m *MockISiteInfo) GetPageInfo(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetPageInfo", arg0)
}

// GetPageInfo indicates an expected call of GetPageInfo.
func (mr *MockISiteInfoMockRecorder) GetPageInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPageInfo", reflect.TypeOf((*MockISiteInfo)(nil).GetPageInfo), arg0)
}
