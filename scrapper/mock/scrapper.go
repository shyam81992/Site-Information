// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/shyam81992/Site-Information/scrapper (interfaces: IScrapper)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockIScrapper is a mock of IScrapper interface.
type MockIScrapper struct {
	ctrl     *gomock.Controller
	recorder *MockIScrapperMockRecorder
}

// MockIScrapperMockRecorder is the mock recorder for MockIScrapper.
type MockIScrapperMockRecorder struct {
	mock *MockIScrapper
}

// NewMockIScrapper creates a new mock instance.
func NewMockIScrapper(ctrl *gomock.Controller) *MockIScrapper {
	mock := &MockIScrapper{ctrl: ctrl}
	mock.recorder = &MockIScrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIScrapper) EXPECT() *MockIScrapperMockRecorder {
	return m.recorder
}

// GetPageInfo mocks base method.
func (m *MockIScrapper) GetPageInfo(arg0 string) gin.H {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPageInfo", arg0)
	ret0, _ := ret[0].(gin.H)
	return ret0
}

// GetPageInfo indicates an expected call of GetPageInfo.
func (mr *MockIScrapperMockRecorder) GetPageInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPageInfo", reflect.TypeOf((*MockIScrapper)(nil).GetPageInfo), arg0)
}
